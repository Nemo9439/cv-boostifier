{"version":3,"sources":["skins/Sql/Sql.tsx","skins/Sql/Sql.helper.ts","skins/Sql/terminal.js"],"names":["Sql","props","profile","termWrapper","useRef","document","getElementById","profileDb","terminal","Terminal","processCommand","command","a","Promise","resolve","reject","setTimeout","res","table","AsciiTable","length","toLowerCase","Object","keys","current","tables","forEach","key","addRow","toString","split","join","hasBackslahG","indexOf","console","log","substr","exec","i","output","map","row","k","repeat","Math","max","setHeading","apply","values","val","e","error","useEffect","createDb","alasql","name","basics","term","welcomeMessage","clear","print","children","innerHTML","appendChild","html","inputLoop","input","trim","then","catch","err","id","ref","resume","db","Database","sql","obj","Array","isArray","fields","dbTableName","fieldsStr","field","data","module","exports","terminalBeep","firstPrompt","promptInput","terminalObj","message","PROMPT_TYPE","callback","shouldDisplayInput","inputField","createElement","historyIndex","showHistoryInput","history","from","querySelectorAll","reverse","_inputLine","textContent","value","innerText","style","position","zIndex","outline","border","opacity","fontSize","_input","display","fireCursorInterval","cursor","_cursor","parentElement","_shouldBlinkCursor","visibility","onblur","onfocus","onclick","focus","onkeydown","which","preventDefault","onkeyup","inputValue","removeChild","toUpperCase","code","source","volume","this","className","_innerWindow","_output","classList","add","beep","load","play","isHTML","type","newLine","password","confirm","sleep","milliseconds","setTextSize","size","setTextColor","col","color","background","setBackgroundColor","setWidth","width","setHeight","height","blinkingCursor","bool","fontFamily","margin","padding"],"mappings":"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","file":"static/js/28.f55b3b56.chunk.js","sourcesContent":["/// <reference path=\"./ascii-table.d.ts\" />\nimport React, {PropsWithChildren, useEffect, useRef} from 'react';\nimport './Sql.scss';\nimport {createDb} from './Sql.helper';\nimport alasql from 'alasql';\nimport AsciiTable from 'ascii-table';\nimport Terminal from './terminal';\nimport {IProfileProps} from '../../models';\n\nexport function Sql(props: PropsWithChildren<IProfileProps>) {\n  const CLEAR = 'clear';\n  const {profile} = props;\n  const termWrapper = useRef(document.getElementById('term-wrapper') as HTMLDivElement);\n  const profileDb = useRef(null as any);\n  const terminal = useRef(new Terminal('termId'));\n  const processCommand = async (command: string) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          let res;\n          const table = new AsciiTable();\n          if (!command.length) {\n            resolve('<br>')\n          } else {\n            if (command.toLowerCase() === CLEAR) {\n              resolve(CLEAR);\n            } else if (command.toLowerCase() === 'show tables') {\n              Object.keys(profileDb.current.tables).forEach((key: any) => {\n                table.addRow(key);\n              });\n              resolve(table.toString().split('\\n').join('<br>'));\n            } else if (command.toLowerCase() === 'help') {\n              resolve(`<small>Typing \"show tables\" will print the list of tables.<br>Typing an SQL query will print the results<br>Example: \"select * from education\"</small>`);\n            } else {\n              const hasBackslahG = command.indexOf('\\\\G')\n              console.log(`hasBackslahG = ${hasBackslahG}`)\n              if (hasBackslahG > 0) {\n                command = command.substr(0, hasBackslahG)\n              }\n              res = profileDb.current.exec(command);\n              const keys = Object.keys(res[0]) || ['N/A'];\n\n              if (hasBackslahG > 0) {\n                let i=0;\n                const output = res.map((row:any)=> {\n                  i++;\n                  const h = `*************************** ${i}. row ***************************<br>`\n                  return h+ keys.map((k)=>{\n                    return `${' '.repeat(Math.max(27-k.length,0))}${k}: ${row[k] || 'NULL' }`\n                  }).join('<br>')\n                }).join('<br>')\n                resolve(output);\n              } else {\n                table.setHeading.apply(table, [...keys])\n                res.forEach((row: any) => {\n                  table.addRow.apply(table, Object.values(row)\n                    .map(val => val || 'NULL')\n                    .map(val => typeof val === 'string' ? val.split('\\n').join('') : val));\n                });\n//              console.log(table.toString());\n                resolve(table.toString().split('\\n').join('<br>'));\n              }\n              // console.log(JSON.stringify(res));\n            }\n          }\n        } catch (e) {\n          console.error(e);\n          reject(e);\n        }\n      }, 200)\n    });\n  };\n\n  useEffect(() => {\n    const inputLoop = (term: any) => {\n      term.input('', (command: any) => {\n        processCommand(command.trim()).then(res => {\n          if (res === CLEAR) {\n            term.clear();\n          } else {\n            term.print(res, true);\n          }\n          inputLoop(term);\n        }).catch(err => {\n          console.log(err);\n          term.print(`${command}: command not found or wrong sql syntax`);\n          inputLoop(term);\n        });\n      });\n    };\n\n    profileDb.current = createDb(alasql,profile);\n    const name = profile.basics && profile.basics.name;\n    const term = terminal.current;\n    const welcomeMessage = `Welcome to ${name} Resume SQL terminal! <br><small>Type \"help\" to get help</small><br><br>`;\n    term.clear();\n    (term as any).print(welcomeMessage, true);\n    if (termWrapper.current && !termWrapper.current.children.length) {\n      termWrapper.current.innerHTML = '';\n      termWrapper.current.appendChild(term.html);\n      inputLoop(term);\n    }\n  },[profile]);\n\n  return (\n    <>\n      <div id=\"term-wrapper\" ref={termWrapper}></div>\n    </>\n  )\n}\n","export const createDb = (alasql: any, resume: any) => {\n  const db = new alasql.Database();\n  Object.keys(resume).forEach(table => {\n    let sql: string;\n    const obj = Array.isArray(resume[table]) ? resume[table][0] : resume[table];\n    const fields = obj && Object.keys(obj);\n    const dbTableName = table === 'references' ? 'refs' : table;\n    if (fields && fields.length) {\n      const fieldsStr = fields.map(field => `${field} string`).join(', ');\n      sql  = `CREATE TABLE ${dbTableName} (${fieldsStr})`;\n    } else {\n      sql  = `CREATE TABLE ${dbTableName} (_ string)`;\n    }\n    db.exec(sql);\n    db.tables[dbTableName].data = Array.isArray(resume[table]) ? resume[table] : [resume[table]];\n  });\n\n  return db;\n};\n","/*! terminal.js v2.0 | (c) 2014 Erik Österberg | https://github.com/eosterberg/terminaljs */\n\nmodule.exports = (function () {\n  // PROMPT_TYPE\n  var PROMPT_INPUT = 1, PROMPT_PASSWORD = 2, PROMPT_CONFIRM = 3\n\n  var fireCursorInterval = function (inputField, terminalObj) {\n    var cursor = terminalObj._cursor\n    setTimeout(function () {\n      if (inputField.parentElement && terminalObj._shouldBlinkCursor) {\n        cursor.style.visibility = cursor.style.visibility === 'visible' ? 'hidden' : 'visible'\n        fireCursorInterval(inputField, terminalObj)\n      } else {\n        cursor.style.visibility = 'visible'\n      }\n    }, 500)\n  }\n\n\n\n  var firstPrompt = true;\n  var promptInput = function (terminalObj, message, PROMPT_TYPE, callback) {\n    var shouldDisplayInput = (PROMPT_TYPE === PROMPT_INPUT)\n    var inputField = document.createElement('input')\n    var historyIndex = -1;\n    var showHistoryInput = () => {\n      const history = Array.from(terminalObj.html.querySelectorAll('.user-input')).reverse();\n      if (historyIndex >= history.length) {\n        historyIndex = history.length -1;\n      }\n      if (historyIndex < 0) {\n        historyIndex = -1;\n      }\n      if (historyIndex === -1) {\n        terminalObj._inputLine.textContent = inputField.value = '';\n      } else {\n        history[historyIndex] && (terminalObj._inputLine.textContent = inputField.value = history[historyIndex].innerText);\n      }\n    };\n    inputField.style.position = 'absolute'\n    inputField.style.zIndex = '-100'\n    inputField.style.outline = 'none'\n    inputField.style.border = 'none'\n    inputField.style.opacity = '0'\n    inputField.style.fontSize = '0.2em'\n\n    terminalObj._inputLine.textContent = ''\n    terminalObj._input.style.display = 'block'\n    terminalObj.html.appendChild(inputField)\n    fireCursorInterval(inputField, terminalObj)\n\n    if (message.length) terminalObj.print(PROMPT_TYPE === PROMPT_CONFIRM ? message + ' (y/n)' : message)\n\n    inputField.onblur = function () {\n      terminalObj._cursor.style.display = 'none'\n    }\n\n    inputField.onfocus = function () {\n      inputField.value = terminalObj._inputLine.textContent\n      terminalObj._cursor.style.display = 'inline'\n    }\n\n    terminalObj.html.onclick = function () {\n      inputField.focus()\n    }\n\n    inputField.onkeydown = function (e) {\n      if (e.which === 37 || e.which === 39 || e.which === 38 || e.which === 40 || e.which === 9) {\n        e.preventDefault()\n      } else if (shouldDisplayInput && e.which !== 13) {\n        setTimeout(function () {\n          terminalObj._inputLine.textContent = inputField.value\n        }, 1)\n      }\n    }\n    inputField.onkeyup = function (e) {\n      if (PROMPT_TYPE === PROMPT_CONFIRM || e.which === 13) {\n        terminalObj._input.style.display = 'none'\n        var inputValue = inputField.value\n        if (shouldDisplayInput) terminalObj.print(inputValue, false, 'user-input')\n        terminalObj.html.removeChild(inputField)\n        if (typeof(callback) === 'function') {\n          if (PROMPT_TYPE === PROMPT_CONFIRM) {\n            callback(inputValue.toUpperCase()[0] === 'Y' ? true : false)\n          } else callback(inputValue)\n        }\n      } else if (e.code === 'ArrowUp') {\n        historyIndex++;\n        showHistoryInput();\n      } else if (e.code === 'ArrowDown') {\n        historyIndex--;\n        showHistoryInput();\n      }\n    }\n    if (firstPrompt) {\n      firstPrompt = false\n      setTimeout(function () { inputField.focus()\t}, 50)\n    } else {\n      inputField.focus()\n    }\n  }\n\n  var terminalBeep\n\n  var TerminalConstructor = function (id) {\n    if (!terminalBeep) {\n      terminalBeep = document.createElement('audio')\n      var source = '<source src=\"//www.erikosterberg.com/terminaljs/beep.'\n      terminalBeep.innerHTML = source + 'mp3\" type=\"audio/mpeg\">' + source + 'ogg\" type=\"audio/ogg\">'\n      terminalBeep.volume = 0.05\n    }\n\n    this.html = document.createElement('div')\n    this.html.className = 'Terminal'\n    if (typeof(id) === 'string') { this.html.id = id }\n\n    this._innerWindow = document.createElement('div')\n    this._output = document.createElement('p')\n    this._inputLine = document.createElement('span') //the span element where the users input is put\n    this._cursor = document.createElement('span')\n    this._input = document.createElement('p') //the full element administering the user input, including cursor\n    this._input.classList.add('input-line')\n\n    this._shouldBlinkCursor = true\n\n    this.beep = function () {\n      terminalBeep.load()\n      terminalBeep.play()\n    }\n\n    this.print = function (message, isHTML, type) {\n      var newLine = document.createElement('div')\n      type && newLine.classList.add(type);\n      if (isHTML) {\n        newLine.innerHTML = message\n      } else {\n        newLine.textContent = message\n      }\n      this._output.appendChild(newLine)\n    }\n\n    this.input = function (message, callback) {\n      promptInput(this, message, PROMPT_INPUT, callback)\n    }\n\n    this.password = function (message, callback) {\n      promptInput(this, message, PROMPT_PASSWORD, callback)\n    }\n\n    this.confirm = function (message, callback) {\n      promptInput(this, message, PROMPT_CONFIRM, callback)\n    }\n\n    this.clear = function () {\n      this._output.innerHTML = ''\n    }\n\n    this.sleep = function (milliseconds, callback) {\n      setTimeout(callback, milliseconds)\n    }\n\n    this.setTextSize = function (size) {\n      this._output.style.fontSize = size\n      this._input.style.fontSize = size\n    }\n\n    this.setTextColor = function (col) {\n      this.html.style.color = col\n      this._cursor.style.background = col\n    }\n\n    this.setBackgroundColor = function (col) {\n      this.html.style.background = col\n    }\n\n    this.setWidth = function (width) {\n      this.html.style.width = width\n    }\n\n    this.setHeight = function (height) {\n      this.html.style.height = height\n    }\n\n    this.blinkingCursor = function (bool) {\n      bool = bool.toString().toUpperCase()\n      this._shouldBlinkCursor = (bool === 'TRUE' || bool === '1' || bool === 'YES')\n    }\n\n    this._input.appendChild(this._inputLine)\n    this._input.appendChild(this._cursor)\n    this._innerWindow.appendChild(this._output)\n    this._innerWindow.appendChild(this._input)\n    this.html.appendChild(this._innerWindow)\n\n    this.setBackgroundColor('black')\n    this.setTextColor('white')\n    this.setTextSize('1em')\n    this.setWidth('100%')\n    this.setHeight('100%')\n\n    this.html.style.fontFamily = 'Monaco, Courier'\n    this.html.style.margin = '0'\n    this._innerWindow.style.padding = '10px'\n    this._input.style.margin = '0'\n    this._output.style.margin = '0'\n    this._cursor.style.background = 'white'\n    this._cursor.innerHTML = 'C' //put something in the cursor..\n    this._cursor.style.display = 'none' //then hide it\n    this._input.style.display = 'none'\n  }\n\n  return TerminalConstructor\n}())\n"],"sourceRoot":""}
{"version":3,"sources":["skins/ReturnOfTheCV/ReturnOfTheCV.tsx"],"names":["ReturnOfTheCV","props","profile","basics","skills","work","education","references","projects","publications","languages","canvasRef","React","useRef","useEffect","current","canvas","canvasContext","getContext","crawl","document","getElementById","crawlContent","width","height","setCanvasExtents","body","clientWidth","clientHeight","crawlContentStyle","style","crawlPosition","window","onresize","prevTime","stars","count","out","i","s","x","Math","random","y","z","push","makeStars","putPixel","brightness","intensity","rgb","fillStyle","fillRect","tick","time","elapsed","distance","length","star","moveStars","top","cx","cy","d","paintStars","requestAnimationFrame","className","ref","innerWidth","innerHeight","id","name","label","summary","location","address","city","countryCode","phone","email","map","skill","key","workItem","ix","position","startDate","endDate","highlights","highlight","project","entity","description","educationItem","studyType","area","institution","courses","course","language","fluency","reference","publication","publisher","href","website"],"mappings":"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","file":"static/js/32.05f50e37.chunk.js","sourcesContent":["import React, { PropsWithChildren } from \"react\";\nimport \"./ReturnOfTheCV.scss\";\nimport { IProfileProps } from \"../../models\";\n\nexport function ReturnOfTheCV(props: PropsWithChildren<IProfileProps>) {\n  const {\n    basics,\n    skills,\n    work,\n    education,\n    references,\n    projects,\n    publications,\n    languages,\n  } = props.profile;\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  React.useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const canvasContext = canvas.getContext(\"2d\");\n\n      const crawl = document.getElementById(\"crawl\");\n      const crawlContent = document.getElementById(\"crawl-content\");\n\n      if (canvasContext && crawl && crawlContent) {\n        let width: number;\n        let height: number;\n\n        const setCanvasExtents = () => {\n          width = document.body.clientWidth;\n          height = document.body.clientHeight;\n          canvas.width = width;\n          canvas.height = height;\n        };\n\n        setCanvasExtents();\n\n        const crawlContentStyle = crawlContent.style;\n        // start crawl at bottom of 3d plane\n        let crawlPosition = crawl.clientHeight;\n\n        const moveCrawl = (distance: number) => {\n          crawlPosition -= distance;\n          crawlContentStyle.top = crawlPosition + \"px\";\n\n          // if we've scrolled all content past the top edge\n          // of the plane, reposition content at bottom of plane\n          if (crawlPosition < -crawlContent.clientHeight) {\n            crawlPosition = crawl.clientHeight;\n          }\n        };\n\n        window.onresize = () => {\n          setCanvasExtents();\n        };\n\n        const makeStars = (count: number) => {\n          const out = [];\n          for (let i = 0; i < count; i++) {\n            const s = {\n              x: Math.random() * 1600 - 800,\n              y: Math.random() * 900 - 450,\n              z: Math.random() * 1000,\n            };\n            out.push(s);\n          }\n          return out;\n        };\n\n        let stars = makeStars(1000);\n\n        const clear = () => {\n          canvasContext.fillStyle = \"black\";\n          canvasContext.fillRect(0, 0, canvas.width, canvas.height);\n        };\n\n        const putPixel = (x: number, y: number, brightness: number) => {\n          const intensity = brightness * 255;\n          const rgb = `rgb(${intensity},${intensity},${intensity})`;\n          canvasContext.fillStyle = rgb;\n          canvasContext.fillRect(x, y, 1, 1);\n        };\n\n        const moveStars = (distance: number) => {\n          const count = stars.length;\n          for (var i = 0; i < count; i++) {\n            const star = stars[i];\n            star.z -= distance;\n            while (star.z <= 1) {\n              star.z += 1000;\n            }\n          }\n        };\n\n        const paintStars = () => {\n          const cx = canvas.width / 2;\n          const cy = canvas.height / 2;\n\n          const count = stars.length;\n          for (var i = 0; i < count; i++) {\n            const star = stars[i];\n\n            const x = cx + star.x / (star.z * 0.001);\n            const y = cy + star.y / (star.z * 0.001);\n\n            if (x < 0 || x >= width || y < 0 || y >= height) {\n              continue;\n            }\n\n            const d = star.z / 1000.0;\n            const b = 1 - d * d;\n\n            putPixel(x, y, b);\n          }\n        };\n\n        let prevTime: number;\n        const init = (time: number) => {\n          prevTime = time;\n          requestAnimationFrame(tick);\n        };\n\n        const tick = (time: number) => {\n          let elapsed = time - prevTime;\n          prevTime = time;\n\n          moveStars(elapsed * 0.1);\n\n          // time-scale of crawl, increase factor to go faster\n          moveCrawl(elapsed * 0.06);\n\n          clear();\n          paintStars();\n\n          requestAnimationFrame(tick);\n        };\n\n        requestAnimationFrame(init);\n      }\n    }\n  });\n\n  return (\n    <div className=\"return-of-the-cv-skin\">\n      <canvas\n        ref={canvasRef}\n        className=\"stretch\"\n        width={window.innerWidth}\n        height={window.innerHeight}\n      />\n      <div id=\"crawl-container\" className=\"stretch\">\n        <div id=\"crawl\">\n          <div id=\"crawl-content\">\n            <h1>{basics?.name}</h1>\n            <h2>{basics?.label}</h2>\n            <p>{basics?.summary}</p>\n            <section>\n              <h3>Details</h3>\n              <p>\n                {basics?.location?.address && `${basics?.location?.address}, `}\n                {basics?.location?.city && `${basics?.location?.city}, `}\n                {basics?.location?.countryCode && basics?.location?.countryCode}\n              </p>\n              <p>{basics?.phone}</p>\n              <p>{basics?.email}</p>\n            </section>\n            {(skills || []).length > 0 && (\n              <section>\n                <h3>Skills</h3>\n                <p className=\"skills\">\n                  {(skills || []).map((skill) => {\n                    return <span key={skill.name}>{skill.name}</span>;\n                  })}\n                </p>\n              </section>\n            )}\n            {basics?.summary && (\n              <section>\n                <h2>Profile</h2>\n                <p>{basics?.summary}</p>\n              </section>\n            )}\n            {(work || []).length > 0 && (\n              <section>\n                <h2>Experience</h2>\n                {(work || []).map((workItem, ix) => {\n                  return (\n                    <article key={ix}>\n                      <hgroup>\n                        <h4>\n                          {workItem.position}\n                          {workItem.position && workItem.name ? \", \" : \"\"}\n                          {workItem.name}\n                        </h4>\n                        <h6>\n                          {workItem.startDate} - {workItem.endDate}\n                        </h6>\n                      </hgroup>\n                      <p>{workItem.summary}</p>\n                      <ul>\n                        {(workItem.highlights || []).map((highlight) => {\n                          return <li key={highlight}>{highlight}</li>;\n                        })}\n                      </ul>\n                    </article>\n                  );\n                })}\n              </section>\n            )}\n            {(projects || []).length > 0 && (\n              <section>\n                <h2>Projects</h2>\n                {(projects || []).map((project) => {\n                  return (\n                    <article>\n                      <hgroup>\n                        <h4>\n                          {project.name}, {project.entity}\n                        </h4>\n                        <h6>\n                          {project.startDate} - {project.endDate}\n                        </h6>\n                      </hgroup>\n                      <p>{project.description}</p>\n                      <ul>\n                        {(project.highlights || []).map((highlight) => {\n                          return <li>{highlight}</li>;\n                        })}\n                      </ul>\n                    </article>\n                  );\n                })}\n              </section>\n            )}\n            {(education || []).length > 0 && (\n              <section>\n                <h2>Education</h2>\n                {(education || []).map((educationItem, ix) => {\n                  return (\n                    <article key={ix}>\n                      <hgroup>\n                        <h4>\n                          {educationItem.studyType}, {educationItem.area},{\" \"}\n                          {educationItem.institution}\n                        </h4>\n                        <h6>\n                          {educationItem.startDate} - {educationItem.endDate}\n                        </h6>\n                      </hgroup>\n                      <ul>\n                        {(educationItem.courses || []).map((course) => {\n                          return <li key={course}>{course}</li>;\n                        })}\n                      </ul>\n                    </article>\n                  );\n                })}\n              </section>\n            )}\n            {(languages || []).length > 0 && (\n              <section>\n                <h2>Languages</h2>\n                <ul>\n                  {(languages || []).map((language) => {\n                    return (\n                      <li key={language.language}>\n                        {language.language} - {language.fluency}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </section>\n            )}\n            {(references || []).length > 0 && (\n              <section>\n                <h2>References</h2>\n                <ul>\n                  {(references || []).map((reference) => {\n                    return (\n                      <li key={reference.name}>\n                        <h4>{reference.name}</h4>\n                        <p>{reference.reference}</p>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </section>\n            )}\n            {(publications || []).length > 0 && (\n              <section>\n                <h2>Publications</h2>\n                <ul>\n                  {(publications || []).map((publication, ix) => {\n                    return (\n                      <li key={ix}>\n                        <h4>\n                          {publication.name}, {publication.publisher}\n                        </h4>\n                        <p>{publication.summary}</p>\n                        <p>\n                          <a href={publication.website}>\n                            {publication.website}\n                          </a>\n                        </p>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </section>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}